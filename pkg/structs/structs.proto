syntax = "proto3";

option go_package = "pkg/structs";

service Encryption {
    rpc CreateKey (Key) returns (KeyResponse);
    rpc ReadKey (KeyName) returns (KeyResponse);
    rpc DeleteKey (KeyName) returns (KeyResponse);
    rpc ListKeys (Empty) returns (KeyListResponse);

    rpc Encrypt (EncryptRequest) returns (CryptoResult);
    rpc Decrypt (DecryptRequest) returns (CryptoResult);

    rpc Hash (HashRequest) returns (HashResponse);
    rpc GenerateHMAC (HMACRequest) returns (HMACResponse);

    rpc Sign (SignParameters) returns (SignResponse);
    rpc VerifySigned (VerificationRequest) returns (VerificationResponse);
}

message Empty {
}

message KeyName {
    string name = 1;
}

message Key {
    string name = 1;
    EncryptionType type = 2;
}

message KeyResponse {
    Status status = 1;
    string message = 2;
    Key key = 3;
}

message KeyListResponse {
    Status status = 1;
    string message = 2;
    repeated Key keys = 3;
}

enum EncryptionType {
    AES256_GCM96 = 0;
    CHACHA20_POLY1305 = 1;
    ECDSA_P256 = 3;
    ED25519 = 4;
    RSA2048 = 5;
    RSA4096 = 6;
    ECDSA_P384 = 7;
    ECDSA_P521 = 8;
    AES128_GCM96 = 9;
    RSA3072 = 10;
}

enum HashType {
    EmptyHashType = 0;
    HashTypeSHA1 = 1;
    HashTypeSHA2224 = 2;
    HashTypeSHA2256 = 3;
    HashTypeSHA2384 = 4;
    HashTypeSHA2512 = 5;
}

enum Status {
    UNKNOWN = 0;
    SUCCESS = 1;
    ERROR = 2;
}

message EncryptRequest {
    string keyName = 1;
    string plainText = 2;
    string nonce = 3;
    int64 keyVersion = 4;
}

message DecryptRequest {
    string keyName = 1;
    string ciphertext = 2;
    string nonce = 3;
    int64 keyVersion = 4;
}

message CryptoResult {
    string result = 1;
}

message HashRequest {
    HashType algorithm = 1;
    string input = 2;
    string format = 3;
}

message HashResponse {
    string result = 1;
}

message HMACRequest {
    string keyName = 1;
    int64 keyVersion = 2;
    string algorithm = 3;
    string input = 4;
}

message HMACResponse {
    string result = 1;
}

message SignParameters {
    string keyName = 1;
    int64 keyVersion = 2;
    HashType hashAlgorithm = 3;
    string input = 4;
    string context = 5;
    bool prehashed = 6;
    string signatureAlgorithm = 7;
}

message SignResponse {
    string result = 1;
    string pubKey = 2;
}

message VerificationRequest {
    string keyName = 1;
    HashType hashAlgorithm = 2;
    string input = 3;
    string signature = 4;
    string hmac = 5;
    string context = 6;
    bool prehashed = 7;
    string signatureAlgorithm = 8;
}

message VerificationResponse {
    bool verificationResult = 1;
}
